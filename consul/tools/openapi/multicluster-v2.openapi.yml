openapi: 3.0.0
info:
  title: Consul multicluster
  description: Consul APIs for interacting with the multicluster resource kinds at version v2
  version: v2
paths:
  api/multicluster/v2/ComputedExportedServices:
    get:
      summary: List multicluster.v2.ComputedExportedServices resources
      operationId: list-ComputedExportedServices
      parameters:
        - $ref: '#/components/parameters/peer'
        - $ref: '#/components/parameters/consistent'
        - $ref: '#/components/parameters/name_prefix'
        - $ref: '#/components/parameters/partition'
      responses:
        "200":
          description: The listing was successful and the body contains the array of results.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ComputedExportedServices'
                    generation:
                      type: string
                      description: |
                        // Generation is incremented whenever the resource's content (i.e. not its
                        // status) is modified. You can think of it as being the "user version".
                        //
                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                        // can treat its timestamp component as the resource's modification time.
                    id:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // ID uniquely identifies the resource.
                    metadata:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                        // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                    owner:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // Owner (optionally) describes which resource "owns" this resource, it is
                        // immutable and can only be set on resource creation. Owned resources will
                        // be automatically deleted when their owner is deleted.
                    status:
                      type: object
                      additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                      description: |
                        // Status is used by controllers to communicate the result of attempting to
                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                        // with users and other controllers. Each status is identified by a unique key
                        // and should only ever be updated by one controller.
                        //
                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                        // so via the Write endpoint will result in an InvalidArgument error code.
                    version:
                      type: string
                      description: |
                        // Version is the low-level version identifier used by the storage backend
                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                        // modified in any way, including status updates.
                        //
                        // When calling the Write endpoint, providing a non-blank version will perform
                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                        // if the given version doesn't match what is stored.
      security:
        - BearerAuth:
            - write:TrafficPermissions.destination
          ConsulTokenHeader:
            - write:TrafficPermissions.destination
  api/multicluster/v2/ComputedExportedServices/{name}:
    get:
      summary: Read multicluster.v2.ComputedExportedServices resources
      operationId: read-ComputedExportedServices.
      parameters:
        - $ref: '#/components/parameters/consistent'
      responses:
        "200":
          description: The read was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ComputedExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    put:
      summary: Write multicluster.v2.ComputedExportedServices resources
      operationId: write-ComputedExportedServices
      requestBody:
        description: The multicluster.v2.ComputedExportedServices resource to be updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ComputedExportedServices'
                generation:
                  type: string
                  description: |
                    // Generation is incremented whenever the resource's content (i.e. not its
                    // status) is modified. You can think of it as being the "user version".
                    //
                    // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                    // can treat its timestamp component as the resource's modification time.
                id:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // ID uniquely identifies the resource.
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    // Metadata contains key/value pairs of arbitrary metadata about the resource.
                    // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                owner:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // Owner (optionally) describes which resource "owns" this resource, it is
                    // immutable and can only be set on resource creation. Owned resources will
                    // be automatically deleted when their owner is deleted.
                status:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                  description: |
                    // Status is used by controllers to communicate the result of attempting to
                    // reconcile and apply the resource (e.g. surface semantic validation errors)
                    // with users and other controllers. Each status is identified by a unique key
                    // and should only ever be updated by one controller.
                    //
                    // Status can only be updated via the WriteStatus endpoint. Attempting to do
                    // so via the Write endpoint will result in an InvalidArgument error code.
                version:
                  type: string
                  description: |
                    // Version is the low-level version identifier used by the storage backend
                    // in CAS (Compare-And-Swap) operations. It will change when the resource is
                    // modified in any way, including status updates.
                    //
                    // When calling the Write endpoint, providing a non-blank version will perform
                    // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                    // if the given version doesn't match what is stored.
      responses:
        "200":
          description: The write was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ComputedExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    delete:
      summary: Delete multicluster.v2.ComputedExportedServices resources
      operationId: delete-ComputedExportedServices
      responses:
        "200":
          description: The delete was successful and the body contains the result.
    parameters:
      - $ref: '#/components/parameters/peer'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/partition'
  api/multicluster/v2/ExportedServices:
    get:
      summary: List multicluster.v2.ExportedServices resources
      operationId: list-ExportedServices
      parameters:
        - $ref: '#/components/parameters/peer'
        - $ref: '#/components/parameters/consistent'
        - $ref: '#/components/parameters/name_prefix'
        - $ref: '#/components/parameters/namespace'
        - $ref: '#/components/parameters/ns'
        - $ref: '#/components/parameters/partition'
      responses:
        "200":
          description: The listing was successful and the body contains the array of results.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServices'
                    generation:
                      type: string
                      description: |
                        // Generation is incremented whenever the resource's content (i.e. not its
                        // status) is modified. You can think of it as being the "user version".
                        //
                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                        // can treat its timestamp component as the resource's modification time.
                    id:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // ID uniquely identifies the resource.
                    metadata:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                        // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                    owner:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // Owner (optionally) describes which resource "owns" this resource, it is
                        // immutable and can only be set on resource creation. Owned resources will
                        // be automatically deleted when their owner is deleted.
                    status:
                      type: object
                      additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                      description: |
                        // Status is used by controllers to communicate the result of attempting to
                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                        // with users and other controllers. Each status is identified by a unique key
                        // and should only ever be updated by one controller.
                        //
                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                        // so via the Write endpoint will result in an InvalidArgument error code.
                    version:
                      type: string
                      description: |
                        // Version is the low-level version identifier used by the storage backend
                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                        // modified in any way, including status updates.
                        //
                        // When calling the Write endpoint, providing a non-blank version will perform
                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                        // if the given version doesn't match what is stored.
      security:
        - BearerAuth:
            - write:TrafficPermissions.destination
          ConsulTokenHeader:
            - write:TrafficPermissions.destination
  api/multicluster/v2/ExportedServices/{name}:
    get:
      summary: Read multicluster.v2.ExportedServices resources
      operationId: read-ExportedServices.
      parameters:
        - $ref: '#/components/parameters/consistent'
      responses:
        "200":
          description: The read was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    put:
      summary: Write multicluster.v2.ExportedServices resources
      operationId: write-ExportedServices
      requestBody:
        description: The multicluster.v2.ExportedServices resource to be updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServices'
                generation:
                  type: string
                  description: |
                    // Generation is incremented whenever the resource's content (i.e. not its
                    // status) is modified. You can think of it as being the "user version".
                    //
                    // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                    // can treat its timestamp component as the resource's modification time.
                id:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // ID uniquely identifies the resource.
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    // Metadata contains key/value pairs of arbitrary metadata about the resource.
                    // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                owner:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // Owner (optionally) describes which resource "owns" this resource, it is
                    // immutable and can only be set on resource creation. Owned resources will
                    // be automatically deleted when their owner is deleted.
                status:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                  description: |
                    // Status is used by controllers to communicate the result of attempting to
                    // reconcile and apply the resource (e.g. surface semantic validation errors)
                    // with users and other controllers. Each status is identified by a unique key
                    // and should only ever be updated by one controller.
                    //
                    // Status can only be updated via the WriteStatus endpoint. Attempting to do
                    // so via the Write endpoint will result in an InvalidArgument error code.
                version:
                  type: string
                  description: |
                    // Version is the low-level version identifier used by the storage backend
                    // in CAS (Compare-And-Swap) operations. It will change when the resource is
                    // modified in any way, including status updates.
                    //
                    // When calling the Write endpoint, providing a non-blank version will perform
                    // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                    // if the given version doesn't match what is stored.
      responses:
        "200":
          description: The write was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    delete:
      summary: Delete multicluster.v2.ExportedServices resources
      operationId: delete-ExportedServices
      responses:
        "200":
          description: The delete was successful and the body contains the result.
    parameters:
      - $ref: '#/components/parameters/peer'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/ns'
      - $ref: '#/components/parameters/partition'
  api/multicluster/v2/NamespaceExportedServices:
    get:
      summary: List multicluster.v2.NamespaceExportedServices resources
      operationId: list-NamespaceExportedServices
      parameters:
        - $ref: '#/components/parameters/peer'
        - $ref: '#/components/parameters/consistent'
        - $ref: '#/components/parameters/name_prefix'
        - $ref: '#/components/parameters/namespace'
        - $ref: '#/components/parameters/ns'
        - $ref: '#/components/parameters/partition'
      responses:
        "200":
          description: The listing was successful and the body contains the array of results.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.NamespaceExportedServices'
                    generation:
                      type: string
                      description: |
                        // Generation is incremented whenever the resource's content (i.e. not its
                        // status) is modified. You can think of it as being the "user version".
                        //
                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                        // can treat its timestamp component as the resource's modification time.
                    id:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // ID uniquely identifies the resource.
                    metadata:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                        // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                    owner:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // Owner (optionally) describes which resource "owns" this resource, it is
                        // immutable and can only be set on resource creation. Owned resources will
                        // be automatically deleted when their owner is deleted.
                    status:
                      type: object
                      additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                      description: |
                        // Status is used by controllers to communicate the result of attempting to
                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                        // with users and other controllers. Each status is identified by a unique key
                        // and should only ever be updated by one controller.
                        //
                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                        // so via the Write endpoint will result in an InvalidArgument error code.
                    version:
                      type: string
                      description: |
                        // Version is the low-level version identifier used by the storage backend
                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                        // modified in any way, including status updates.
                        //
                        // When calling the Write endpoint, providing a non-blank version will perform
                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                        // if the given version doesn't match what is stored.
      security:
        - BearerAuth:
            - write:TrafficPermissions.destination
          ConsulTokenHeader:
            - write:TrafficPermissions.destination
  api/multicluster/v2/NamespaceExportedServices/{name}:
    get:
      summary: Read multicluster.v2.NamespaceExportedServices resources
      operationId: read-NamespaceExportedServices.
      parameters:
        - $ref: '#/components/parameters/consistent'
      responses:
        "200":
          description: The read was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.NamespaceExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    put:
      summary: Write multicluster.v2.NamespaceExportedServices resources
      operationId: write-NamespaceExportedServices
      requestBody:
        description: The multicluster.v2.NamespaceExportedServices resource to be updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.NamespaceExportedServices'
                generation:
                  type: string
                  description: |
                    // Generation is incremented whenever the resource's content (i.e. not its
                    // status) is modified. You can think of it as being the "user version".
                    //
                    // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                    // can treat its timestamp component as the resource's modification time.
                id:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // ID uniquely identifies the resource.
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    // Metadata contains key/value pairs of arbitrary metadata about the resource.
                    // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                owner:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // Owner (optionally) describes which resource "owns" this resource, it is
                    // immutable and can only be set on resource creation. Owned resources will
                    // be automatically deleted when their owner is deleted.
                status:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                  description: |
                    // Status is used by controllers to communicate the result of attempting to
                    // reconcile and apply the resource (e.g. surface semantic validation errors)
                    // with users and other controllers. Each status is identified by a unique key
                    // and should only ever be updated by one controller.
                    //
                    // Status can only be updated via the WriteStatus endpoint. Attempting to do
                    // so via the Write endpoint will result in an InvalidArgument error code.
                version:
                  type: string
                  description: |
                    // Version is the low-level version identifier used by the storage backend
                    // in CAS (Compare-And-Swap) operations. It will change when the resource is
                    // modified in any way, including status updates.
                    //
                    // When calling the Write endpoint, providing a non-blank version will perform
                    // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                    // if the given version doesn't match what is stored.
      responses:
        "200":
          description: The write was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.NamespaceExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    delete:
      summary: Delete multicluster.v2.NamespaceExportedServices resources
      operationId: delete-NamespaceExportedServices
      responses:
        "200":
          description: The delete was successful and the body contains the result.
    parameters:
      - $ref: '#/components/parameters/peer'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/ns'
      - $ref: '#/components/parameters/partition'
  api/multicluster/v2/PartitionExportedServices:
    get:
      summary: List multicluster.v2.PartitionExportedServices resources
      operationId: list-PartitionExportedServices
      parameters:
        - $ref: '#/components/parameters/peer'
        - $ref: '#/components/parameters/consistent'
        - $ref: '#/components/parameters/name_prefix'
        - $ref: '#/components/parameters/partition'
      responses:
        "200":
          description: The listing was successful and the body contains the array of results.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.PartitionExportedServices'
                    generation:
                      type: string
                      description: |
                        // Generation is incremented whenever the resource's content (i.e. not its
                        // status) is modified. You can think of it as being the "user version".
                        //
                        // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                        // can treat its timestamp component as the resource's modification time.
                    id:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // ID uniquely identifies the resource.
                    metadata:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        // Metadata contains key/value pairs of arbitrary metadata about the resource.
                        // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                    owner:
                      $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                      description: |
                        // Owner (optionally) describes which resource "owns" this resource, it is
                        // immutable and can only be set on resource creation. Owned resources will
                        // be automatically deleted when their owner is deleted.
                    status:
                      type: object
                      additionalProperties:
                        $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                      description: |
                        // Status is used by controllers to communicate the result of attempting to
                        // reconcile and apply the resource (e.g. surface semantic validation errors)
                        // with users and other controllers. Each status is identified by a unique key
                        // and should only ever be updated by one controller.
                        //
                        // Status can only be updated via the WriteStatus endpoint. Attempting to do
                        // so via the Write endpoint will result in an InvalidArgument error code.
                    version:
                      type: string
                      description: |
                        // Version is the low-level version identifier used by the storage backend
                        // in CAS (Compare-And-Swap) operations. It will change when the resource is
                        // modified in any way, including status updates.
                        //
                        // When calling the Write endpoint, providing a non-blank version will perform
                        // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                        // if the given version doesn't match what is stored.
      security:
        - BearerAuth:
            - write:TrafficPermissions.destination
          ConsulTokenHeader:
            - write:TrafficPermissions.destination
  api/multicluster/v2/PartitionExportedServices/{name}:
    get:
      summary: Read multicluster.v2.PartitionExportedServices resources
      operationId: read-PartitionExportedServices.
      parameters:
        - $ref: '#/components/parameters/consistent'
      responses:
        "200":
          description: The read was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.PartitionExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    put:
      summary: Write multicluster.v2.PartitionExportedServices resources
      operationId: write-PartitionExportedServices
      requestBody:
        description: The multicluster.v2.PartitionExportedServices resource to be updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.PartitionExportedServices'
                generation:
                  type: string
                  description: |
                    // Generation is incremented whenever the resource's content (i.e. not its
                    // status) is modified. You can think of it as being the "user version".
                    //
                    // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                    // can treat its timestamp component as the resource's modification time.
                id:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // ID uniquely identifies the resource.
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    // Metadata contains key/value pairs of arbitrary metadata about the resource.
                    // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                owner:
                  $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                  description: |
                    // Owner (optionally) describes which resource "owns" this resource, it is
                    // immutable and can only be set on resource creation. Owned resources will
                    // be automatically deleted when their owner is deleted.
                status:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                  description: |
                    // Status is used by controllers to communicate the result of attempting to
                    // reconcile and apply the resource (e.g. surface semantic validation errors)
                    // with users and other controllers. Each status is identified by a unique key
                    // and should only ever be updated by one controller.
                    //
                    // Status can only be updated via the WriteStatus endpoint. Attempting to do
                    // so via the Write endpoint will result in an InvalidArgument error code.
                version:
                  type: string
                  description: |
                    // Version is the low-level version identifier used by the storage backend
                    // in CAS (Compare-And-Swap) operations. It will change when the resource is
                    // modified in any way, including status updates.
                    //
                    // When calling the Write endpoint, providing a non-blank version will perform
                    // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                    // if the given version doesn't match what is stored.
      responses:
        "200":
          description: The write was successful and the body contains the result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.PartitionExportedServices'
                  generation:
                    type: string
                    description: |
                      // Generation is incremented whenever the resource's content (i.e. not its
                      // status) is modified. You can think of it as being the "user version".
                      //
                      // Concretely, Generation is a [ULID](https://github.com/ulid/spec) and you
                      // can treat its timestamp component as the resource's modification time.
                  id:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // ID uniquely identifies the resource.
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: |
                      // Metadata contains key/value pairs of arbitrary metadata about the resource.
                      // "deletionTimestamp" and "finalizers" keys are reserved for internal use.
                  owner:
                    $ref: '#/components/schemas/hashicorp.consul.resource.ID'
                    description: |
                      // Owner (optionally) describes which resource "owns" this resource, it is
                      // immutable and can only be set on resource creation. Owned resources will
                      // be automatically deleted when their owner is deleted.
                  status:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/hashicorp.consul.resource.Status'
                    description: |
                      // Status is used by controllers to communicate the result of attempting to
                      // reconcile and apply the resource (e.g. surface semantic validation errors)
                      // with users and other controllers. Each status is identified by a unique key
                      // and should only ever be updated by one controller.
                      //
                      // Status can only be updated via the WriteStatus endpoint. Attempting to do
                      // so via the Write endpoint will result in an InvalidArgument error code.
                  version:
                    type: string
                    description: |
                      // Version is the low-level version identifier used by the storage backend
                      // in CAS (Compare-And-Swap) operations. It will change when the resource is
                      // modified in any way, including status updates.
                      //
                      // When calling the Write endpoint, providing a non-blank version will perform
                      // a CAS (Compare-And-Swap) write, which will result in an Aborted error code
                      // if the given version doesn't match what is stored.
    delete:
      summary: Delete multicluster.v2.PartitionExportedServices resources
      operationId: delete-PartitionExportedServices
      responses:
        "200":
          description: The delete was successful and the body contains the result.
    parameters:
      - $ref: '#/components/parameters/peer'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/partition'
components:
  schemas:
    hashicorp.consul.multicluster.v2.ComputedExportedService:
      type: object
      properties:
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ComputedExportedServicesConsumer'
        target_ref:
          $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
    hashicorp.consul.multicluster.v2.ComputedExportedServices:
      type: object
      properties:
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ComputedExportedService'
    hashicorp.consul.multicluster.v2.ComputedExportedServicesConsumer:
      type: object
      properties:
        partition:
          type: string
        peer:
          type: string
    hashicorp.consul.multicluster.v2.ExportedServices:
      type: object
      properties:
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServicesConsumer'
        services:
          type: array
          items:
            type: string
    hashicorp.consul.multicluster.v2.ExportedServicesConsumer:
      type: object
      properties:
        partition:
          type: string
        peer:
          type: string
        sameness_group:
          type: string
    hashicorp.consul.multicluster.v2.NamespaceExportedServices:
      type: object
      properties:
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServicesConsumer'
    hashicorp.consul.multicluster.v2.PartitionExportedServices:
      type: object
      properties:
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/hashicorp.consul.multicluster.v2.ExportedServicesConsumer'
    hashicorp.consul.resource.Condition:
      type: object
      properties:
        message:
          type: string
          description: |
            // Message contains a human-friendly description of the status.
        reason:
          type: string
          description: |
            // Reason provides more machine-readable details about the condition (e.g.
            // "InvalidProtocol").
        resource:
          $ref: '#/components/schemas/hashicorp.consul.resource.Reference'
          description: |
            // Resource identifies which resource this condition relates to, when it is
            // not the core resource itself.
        state:
          $ref: '#/components/schemas/hashicorp.consul.resource.Condition.State'
          description: |
            // State represents the state of the condition (i.e. true/false/unknown).
        type:
          type: string
          description: |
            // Type identifies the type of condition (e.g. "Invalid", "ResolvedRefs").
      description: |4
           Condition represents a discreet observation about a resource in relation to
           the current state of the system.
           It is heavily inspired by Kubernetes' [conditions](https://bit.ly/3H9Y6IK)
           and the Gateway API [types and reasons](https://bit.ly/3n2PPiP).
    hashicorp.consul.resource.Condition.State:
      type: string
      enum:
        - STATE_UNKNOWN
        - STATE_TRUE
        - STATE_FALSE
      description: |4
           State represents the state of the condition (i.e. true/false/unknown).
    hashicorp.consul.resource.ID:
      type: object
      properties:
        name:
          type: string
          description: |
            // Name is the user-given name of the resource (e.g. the "billing" service).
        tenancy:
          $ref: '#/components/schemas/hashicorp.consul.resource.Tenancy'
          description: |
            // Tenancy identifies the tenancy units (i.e. partition, namespace) in which
            // the resource resides.
        type:
          $ref: '#/components/schemas/hashicorp.consul.resource.Type'
          description: |
            // Type identifies the resource's type.
        uid:
          type: string
          description: |
            // Uid is the unique internal identifier we gave to the resource.
            //
            // It is primarily used to tell the difference between the current resource
            // and previous deleted resources with the same user-given name.
            //
            // Concretely, Uid is a [ULID](https://github.com/ulid/spec) and you can treat
            // its timestamp component as the resource's creation time.
      description: |4
           ID uniquely identifies a resource.
    hashicorp.consul.resource.Reference:
      type: object
      properties:
        name:
          type: string
          description: |
            // Name is the user-given name of the resource (e.g. the "billing" service).
        section:
          type: string
          description: |
            // Section identifies which part of the resource the condition relates to.
        tenancy:
          $ref: '#/components/schemas/hashicorp.consul.resource.Tenancy'
          description: |
            // Tenancy identifies the tenancy units (i.e. partition, namespace) in which
            // the resource resides.
        type:
          $ref: '#/components/schemas/hashicorp.consul.resource.Type'
          description: |
            // Type identifies the resource's type.
      description: |4
           Reference identifies which resource a condition relates to, when it is not
           the core resource itself.
    hashicorp.consul.resource.Status:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/hashicorp.consul.resource.Condition'
          description: |
            // Conditions contains a set of discreet observations about the resource in
            // relation to the current state of the system (e.g. it is semantically valid).
        observed_generation:
          type: string
          description: |
            // ObservedGeneration identifies which generation of a resource this status
            // related to. It can be used to determine whether the current generation of
            // a resource has been reconciled.
        updated_at:
          type: string
          format: date-time
          description: |
            // UpdatedAt is the time at which the status was last written.
      description: |4
           Status is used by controllers to communicate the result of attempting to
           reconcile and apply a resource (e.g. surface semantic validation errors)
           with users and other controllers.
    hashicorp.consul.resource.Tenancy:
      type: object
      properties:
        namespace:
          type: string
          description: |
            // Namespace further isolates resources within a partition.
            // https://developer.hashicorp.com/consul/docs/enterprise/namespaces
            //
            // When using the List and WatchList endpoints, provide the wildcard value "*"
            // to list resources across all namespaces.
        partition:
          type: string
          description: |
            // Partition is the topmost administrative boundary within a cluster.
            // https://developer.hashicorp.com/consul/docs/enterprise/admin-partitions
            //
            // When using the List and WatchList endpoints, provide the wildcard value "*"
            // to list resources across all partitions.
        peer_name:
          type: string
          description: |
            // PeerName identifies which peer the resource is imported from.
            // https://developer.hashicorp.com/consul/docs/connect/cluster-peering
            //
            // When using the List and WatchList endpoints, provide the wildcard value "*"
            // to list resources across all peers.
      description: |4
           Tenancy describes the tenancy units in which the resource resides.
    hashicorp.consul.resource.Type:
      type: object
      properties:
        group:
          type: string
          description: |
            // Group describes the area of functionality to which this resource type
            // relates (e.g. "catalog", "authorization").
        group_version:
          type: string
          description: |
            // GroupVersion is incremented when sweeping or backward-incompatible changes
            // are made to the group's resource types.
        kind:
          type: string
          description: |
            // Kind identifies the specific resource type within the group.
      description: |4
           Type describes a resource's type. It follows the GVK (Group Version Kind)
           [pattern](https://book.kubebuilder.io/cronjob-tutorial/gvks.html) established
           by Kubernetes.
  parameters:
    consistent:
      name: consistent
      in: query
      description: When true, the operation will be performed with strong consistency
      schema:
        type: boolean
    name:
      name: name
      in: path
      description: The name of the resource to operate on.
      required: true
      schema:
        type: string
    name_prefix:
      name: name_prefix
      in: query
      description: The resource name prefix used to filter the result list.
      schema:
        type: string
    namespace:
      name: namespace
      in: query
      description: Specifies the Consul namespace of resources to operate on. This parameter takes precedence over the `ns` alias.
      schema:
        type: string
    ns:
      name: ns
      in: query
      description: '`ns` is an alias for the `namespace` query param. The `namespace` parameter takes precedence.'
      schema:
        type: string
    partition:
      name: partition
      in: query
      description: Specifies the Consul partition of resources to operate on.
      schema:
        type: string
    peer:
      name: peer
      in: query
      description: Specifies the Consul peer of imported resources to operate on.
      schema:
        type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    ConsulTokenHeader:
      type: apiKey
      in: header
      name: X-Consul-Token
security:
  - BearerAuth: []
  - ConsulTokenHeader: []